#Pairs trading can be done on many assets, e.g. stocks, bonds, ETFs, currencies, etc.
#This example is for S&P 500 Consumer Discretionary sector

#load packages, use pacman to manage packages 
if("pacman" %in% rownames(installed.packages()) == FALSE) {install.packages("pacman")} # Check if you have universal installer package, install if not
pacman::p_load("tseries","quantmod","PerformanceAnalytics","roll","urca","dplyr","corrplot","ggplot")

#data: can either be imported or pre-downloaded then read in R
#data importing using Yahoo API
#dataset is 10-year's daily adjusted close pirces from Jan 1, 2009 - Dec 31, 2018
tickers <- c('AAP','AMZN','AZO','BBY','BKNG','BWA','CCL','CMG','DHI','DLTR','DRI','EBAY','EXPE','F','GPC','GPS','GRMN','HAS','HBI','HD','HOG','HRB','JWN','KMX','KSS','LB','LEG','LEN','LKQ','LOW','M','MAR','MCD','MGM','MHK','NKE','NVR','NWL','ORLY','PHM','PVH','RCL','RL','ROST','SBUX','TGT','TIF','TJX','TPR','TSCO','UAA','ULTA','VFC','WHR','WYNN','YUM')
getSymbols(tickers,src='yahoo',from='2009-01-01',to='2019-01-01')
data <- cbind(AAP[,6],AMZN[,6],AZO[,6],BBY[,6],BKNG[,6],BWA[,6],CCL[,6],CMG[,6],DHI[,6],DLTR[,6],DRI[,6],EBAY[,6],EXPE[,6],F[,6],GPC[,6],GPS[,6],GRMN[,6],HAS[,6],HBI[,6],HD[,6],HOG[,6],HRB[,6],JWN[,6],KMX[,6],KSS[,6],LB[,6],LEG[,6],LEN[,6],LKQ[,6],LOW[,6],M[,6],MAR[,6],MCD[,6],MGM[,6],MHK[,6],NKE[,6],NVR[,6],NWL[,6],ORLY[,6],PHM[,6],PVH[,6],RCL[,6],RL[,6],ROST[,6],SBUX[,6],TGT[,6],TIF[,6],TJX[,6],TPR[,6],TSCO[,6],UAA[,6],ULTA[,6],VFC[,6],WHR[,6],WYNN[,6],YUM[,6])
data <- na.exclude(data) #exclude NAs
ncol(data)
colnames(data) <- c('AAP','AMZN','AZO','BBY','BKNG','BWA','CCL','CMG','DHI','DLTR','DRI','EBAY','EXPE','F','GPC','GPS','GRMN','HAS','HBI','HD','HOG','HRB','JWN','KMX','KSS','LB','LEG','LEN','LKQ','LOW','M','MAR','MCD','MGM','MHK','NKE','NVR','NWL','ORLY','PHM','PVH','RCL','RL','ROST','SBUX','TGT','TIF','TJX','TPR','TSCO','UAA','ULTA','VFC','WHR','WYNN','YUM')

set.seed(100)

#Tain/test split
tdata <- data['::2017-12-31']
fdata <- data['2018-01-01::']

### 1) pairs identification 
#corr plot
t_test<-tdata
ncol(t_test) #56

for(i in 1:56)
{t_test[,i]=dailyReturn(t_test[,i],type='arithmetic')
}

correlations<-cor(t_test)

row_indic <- apply(correlations, 1, function(x) sum(x > 0.75 | x < - 0.75) > 1)
correlations<- correlations[row_indic ,row_indic ]
corrplot(correlations,type = "upper", tl.pos = "td",
         method = "circle", tl.cex = 0.5, tl.col = 'black',
         order = "hclust", diag = FALSE)

#subset the stocks with higher corr (0.75)
hi_cor<-c('CCL','RCL','PHM','DHI','LEN','HD','LOW')
tdata <- tdata[,hi_cor]
fdata <- fdata[,hi_cor]

### 2) cointegration test 
#loop to test for co-integration of all pairs among the 7 stocks 
for(i in 1:7)
  for(j in 1:7)
  {
    col_i <- tdata[,i]
    col_j<- tdata[,j]
    rTcol_i <- dailyReturn(col_i,type='arithmetic')
    rTcol_j <- dailyReturn(col_j,type='arithmetic')
    colnames(rTcol_i)<-colnames(col_i) 
    colnames(rTcol_j)<-colnames(col_j)
    cat("This is to test for the pair of",
        colnames(tdata[,i]),"and",colnames(tdata[,j]),
        "and their correlation is",cor(rTcol_i,rTcol_j)) #double checking correlation 
    
    # Spread Calculation
    tintsp <- col_i-lm(col_i~0+col_j)$coefficients[1]*col_j
    tintspm <- xts(rep(mean(tintsp),length(tintsp)),order.by=as.Date(index(tintsp)))
    
    # Non-Stationary Prices
    print(adf.test(col_i))
    print(adf.test(col_j))
    
    # Stationary first-lags 
    print(adf.test(na.exclude(diff(col_i,lag=1))))
    print(adf.test(na.exclude(diff(col_j,lag=1))))
    
    # Stationary Spread
    print(adf.test(tintsp))
    print(pp.test(tintsp,lshort=F))  
  }


#DHI-HD is the selected pair 

#visulization
THD <- tdata[,grep("HD",colnames(tdata))]
TDHI <- tdata[,grep("DHI",colnames(tdata))]
rTHD <- dailyReturn(THD,type='arithmetic')
rTDHI <- dailyReturn(TDHI,type='arithmetic')
colnames(rTHD) <- 'rTHD'
colnames(rTDHI) <- 'rTDHI'
cor(rTHD,rTDHI)
chart.CumReturns(cbind(rTHD,rTDHI),main='HD-DHI Pair Cumulative Returns',legend.loc='bottomright')

### 3) build strategy 
tintsp <- THD-lm(THD~0+TDHI)$coefficients[1]*TDHI
tintspm <- xts(rep(mean(tintsp),length(tintsp)),order.by=as.Date(index(tintsp)))
plot(cbind(
,tintspm),main='HD-DHI Spread') #spread for the training period - oscillating 

# HD-DHI Rolling Spread Z-Score
fHD <- fdata[,grep("HD",colnames(tdata))]
fDHI <- fdata[,grep("DHI",colnames(tdata))]
fintsp2 <- fHD-lm(THD~0+TDHI)$coefficients[1]*fDHI
fintz <- roll_scale(fintsp2,width=21)
fut1 <- xts(rep(1,length(fdata[,1])),order.by=as.Date(index(fdata)))
fut2 <- xts(rep(2,length(fdata[,1])),order.by=as.Date(index(fdata)))
flt1 <- xts(rep(-1,length(fdata[,1])),order.by=as.Date(index(fdata)))
flt2 <- xts(rep(-2,length(fdata[,1])),order.by=as.Date(index(fdata)))
plot(cbind(fintz,fut1,fut2,flt1,flt2),main='Rolling Spread Z-score')

# HD-DHI Trading Strategy Signals 
fintsig <- lag(ifelse(lag(fintz)>(-2.5)&fintz<(-2.5),-2,
                       ifelse(lag(fintz)<(-0.5)&fintz>(-0.5),-1,
                              ifelse(lag(fintz)<(-3.5)&fintz>(-3.5),-1, #stop loss
                                     ifelse(lag(fintz)<2.5&fintz>2.5,2,
                                            ifelse(lag(fintz)>0.5&fintz<0.5,1,
                                                   ifelse(lag(fintz)>3.5&fintz<3.5,1, #stop loss
                                                          0)))))))
fintsig[is.na(fintsig)] <- 0

# HD-DHI Trading Strategy Positions
fintpos <- ifelse(fintsig>2,1,0)
for(i in 1:length(fintz)){fintpos[i] <- ifelse(fintsig[i]==-2,1,
                                                 ifelse(fintsig[i]==-1,0,
                                                        ifelse(fintsig[i]==2,-1,
                                                               ifelse(fintsig[i]==1,0,fintpos[i-1]))))}
fintpos[is.na(fintpos)] <- 0
finttr <- cbind(fintz,fintsig,fintpos)
colnames(finttr) <- c('Z-Score','Signal','Position')
View(finttr)

### 4) HD-DHI Pair Strategy Performance Comparison
rfHD <- dailyReturn(fHD,type='arithmetic')
rfDHI <- dailyReturn(fDHI,type='arithmetic')
rfintsp <- rfHD-lm(THD~0+TDHI)$coefficients[1]*rfDHI
rfint2 <- fintpos*rfintsp
rfint2c <- ifelse((fintsig==-2|fintsig==-1|fintsig==2|fintsig==1)
                  &fintpos!=lag(fintpos),
                  (rfintsp*fintpos)-0.001,rfintsp*fintpos)
fintcomp <- cbind(rfint2c,rfHD,rfDHI)
colnames(fintcomp) <- c('rfint2c','rfHD','rfDHI')

table.AnnualizedReturns(fintcomp2)
